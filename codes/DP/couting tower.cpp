/*
狀態機 DP - O(N)
你的任務是建造一座寬度為 2、高度為 n 的塔。你有無限數量寬度與高度為整數的方塊。

dp[i][0] = 高度為 i 的塔中，頂層為一個寬度為 2 的方塊（即該層由跨越兩欄的單一方塊覆蓋）的塔的數量。
dp[i][1] = 高度為 i 的塔中，頂層在該層有兩個寬度為 1 的方塊（每欄各一個）的塔的數量。
*/

void solve() {
    long long n;
    cin >> n;
    dp[1][0] = 1;
    dp[1][1] = 1;
    for(int i = 2;i<=n;i++){
        dp[i][0] = (4 * dp[i-1][0] + dp[i-1][1]) % mod;
        dp[i][1] = (dp[i-1][0] + 2 * dp[i-1][1]) % mod;
    }
    cout << (dp[n][0] + dp[n][1]) % mod << endl;
}